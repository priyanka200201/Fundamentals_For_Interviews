1. Code:
String og = "opengenus";
String og2 = new String(og);
System.out.println((og==og2) + " "+ (og.equals(og2)));

Option:
a. true true
b. true false
c. false true
d. false false

Answer: false true
The operator == compare the address of the two variables while equals method compare the content of the two variables.


2. Code:
int five = 5;
int two = 2;
int total = five + (five > 6 ? ++two : --two);

Option:
1
2
4
6
Answer: 6
In ternary expressions, only one of the two right-most expressions are evaluated. Since "five" > 6 is false, ––"two" is evaluated and ++"two" is skipped.
"two" is changed from 2 to 1 and total becomes "five" + (1) which means 5 + 1 = 6.


3.Code:
double num = 2.718;
double num = 2._718;
double num = 2.7_1_8;

Option
Answer: double num = 2._718;

Underscore (_) is valid between two numbers but in this code statement, underscore is between a number and dot (.). 
Hence, it is the only code statement that is not valid and will not compile.


4. How many strings can be collected by Garbage Collector in the following code snippet?
public static void main(String[] fruits) {
  String str1 = new String("open");
  String str2 = new String("source");
  String str2 = new String("opengenus");
  str3 = str1;
  str2 = str3;
  str1 = str2;
}
Option:
0
1
2
3
Answer: 2

All three strings (str1, str2, str3) point to the same string that is "open". Hence, the two strings str2 and str3 can be collected by Garbage Collector
before the end of main() function.


5. What is the output of the following code snippet?
Integer int_data = new Integer(10);
System.out.print(int_data.byteValue());
System.out.print("-");
int int_data_2 = new Integer(10);
System.out.print(int_data_2.byteValue());

Option:
10-10
1010-1010
Does not compile
Run-time error

Answer: Compilation error

If we compile the above code snippet, we will get the following compilation error:
opengenus.java:11: error: int cannot be dereferenced
System.out.print(int_data_2.byteValue());                        
Note: opengenus.java uses or overrides a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
1 error
byteValue() is for Integer wrapper dataype and not for the int primitive datatype.
Footer
